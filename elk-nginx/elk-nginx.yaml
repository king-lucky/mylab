---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-nginx-config
  labels:
    k8s-app: filebeat-nginx
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /var/log/nginx/access.log
      fields:
        app: www
        type: nginx-access
      fields_under_root: true
    - type: log
      enabled: true
      paths:
        - /var/log/nginx/error.log
      fields:
        app: www
        type: nginx-error
      fields_under_root: true
    output.logstash:
      hosts: ["192.168.0.146:5044"]
  nginx.conf: |-
    user  nginx;
    worker_processes  1;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        log_format log_json '{ "@timestamp": "$time_local", '
                        '"remote_addr": "$remote_addr", '
                        '"referer": "$http_referer", '
                        '"request": "$request", '
                        '"status": $status, '
                        '"bytes": $body_bytes_sent, '
                        '"browsers": "$http_user_agent", '
                        '"x_forwarded": "$http_x_forwarded_for", '
                        '"up_addr": "$upstream_addr",'
                        '"up_host": "$upstream_http_host",'
                        '"up_resp_time": "$upstream_response_time",'
                        '"request_time": "$request_time"'
        ' }';        
        access_log  /var/log/nginx/access.log log_json;
        sendfile        on;
        keepalive_timeout  65;
        include /etc/nginx/conf.d/*.conf;
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filebeat-nginx
  labels:
    k8s-app: filebeat-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: filebeat-nginx
  template:
    metadata:
      labels:
        k8s-app: filebeat-nginx
    spec:
      initContainers:
      - image: alpine:3.6
        name: install-nginxtest
        volumeMounts:
        - name: html-dir
          mountPath: /var/html/
        command: ['sh', '-c', 'echo "This a init nginx test server $HOSTNAME" > /var/html/index.html']
      containers:
#      - name: centos
#        image: centos:6.7
#        command: ['sh','-c','while true;do sleep 2;done']
      - name: nginxtest
        image: nginx:1.17.9
        name: nginx
        volumeMounts:
        - name: html-dir
          mountPath: /usr/share/nginx/html/
        - name: nginx-log
          mountPath: /var/log/nginx
        - name: filebeat-nginx-config
          mountPath: /etc/nginx/nginx.conf
          readOnly: true
          subPath: nginx.conf
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:7.6.2
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: filebeat-nginx-config
          mountPath: /usr/share/filebeat/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: nginx-log
          mountPath: /var/log/nginx
      volumes:
      - name: filebeat-nginx-config
        configMap:
          defaultMode: 0644
          name: filebeat-nginx-config
      - name: html-dir
        emptyDir: {}
      - name: nginx-log
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: filebeat-nginx
  name: filebeat-nginx
spec:
  ports:
  - name: 80-80
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    k8s-app: filebeat-nginx
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: nginxtest-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: test.king.com
    http:
      paths:
      - path:
        backend:
          serviceName: filebeat-nginx
          servicePort: 80
